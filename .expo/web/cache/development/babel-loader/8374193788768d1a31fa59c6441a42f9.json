{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\balaj\\\\Desktop\\\\Coding\\\\Class 89\\\\book-santa-stage-11\\\\components\\\\SwipeableFlatlist.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Icon } from \"react-native-elements\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport db from \"../config\";\n\nvar SwipeableFlatlist = function (_Component) {\n  _inherits(SwipeableFlatlist, _Component);\n\n  var _super = _createSuper(SwipeableFlatlist);\n\n  function SwipeableFlatlist(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeableFlatlist);\n\n    _this = _super.call(this, props);\n\n    _this.updateMarkAsread = function (notification) {\n      db.collection(\"all_notifications\").doc(notification.doc_id).update({\n        notification_status: \"read\"\n      });\n    };\n\n    _this.onSwipeValueChange = function (swipeData) {\n      var allNotifications = _this.state.allNotifications;\n      var key = swipeData.key,\n          value = swipeData.value;\n\n      if (value < -Dimensions.get(\"window\").width) {\n        var newData = _toConsumableArray(allNotifications);\n\n        _this.updateMarkAsread(allNotifications[key]);\n\n        newData.splice(key, 1);\n\n        _this.setState({\n          allNotifications: newData\n        });\n      }\n    };\n\n    _this.renderItem = function (data) {\n      return React.createElement(Animated.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }\n      }, React.createElement(ListItem, {\n        leftElement: React.createElement(Icon, {\n          name: \"book\",\n          type: \"font-awesome\",\n          color: \"#696969\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }\n        }),\n        title: data.item.book_name,\n        titleStyle: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        subtitle: data.item.message,\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.renderHiddenItem = function () {\n      return React.createElement(View, {\n        style: styles.rowBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: [styles.backRightBtn, styles.backRightBtnRight],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.backTextWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"Mark as read\")));\n    };\n\n    _this.state = {\n      allNotifications: _this.props.allNotifications\n    };\n    return _this;\n  }\n\n  _createClass(SwipeableFlatlist, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(SwipeListView, {\n        disableRightSwipe: true,\n        data: this.state.allNotifications,\n        renderItem: this.renderItem,\n        renderHiddenItem: this.renderHiddenItem,\n        rightOpenValue: -Dimensions.get(\"window\").width,\n        previewRowKey: \"0\",\n        previewOpenValue: -40,\n        previewOpenDelay: 3000,\n        onSwipeValueChange: this.onSwipeValueChange,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SwipeableFlatlist;\n}(Component);\n\nexport { SwipeableFlatlist as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1\n  },\n  backTextWhite: {\n    color: \"#FFF\",\n    fontWeight: \"bold\",\n    fontSize: 15,\n    textAlign: \"center\",\n    alignSelf: \"flex-start\"\n  },\n  rowBack: {\n    alignItems: \"center\",\n    backgroundColor: \"#29b6f6\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 15\n  },\n  backRightBtn: {\n    alignItems: \"center\",\n    bottom: 0,\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: 0,\n    width: 100\n  },\n  backRightBtnRight: {\n    backgroundColor: \"#29b6f6\",\n    right: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/balaj/Desktop/Coding/Class 89/book-santa-stage-11/components/SwipeableFlatlist.js"],"names":["React","Component","ListItem","Icon","SwipeListView","db","SwipeableFlatlist","props","updateMarkAsread","notification","collection","doc","doc_id","update","notification_status","onSwipeValueChange","swipeData","allNotifications","state","key","value","Dimensions","get","width","newData","splice","setState","renderItem","data","item","book_name","color","fontWeight","message","renderHiddenItem","styles","rowBack","backRightBtn","backRightBtnRight","backTextWhite","container","index","toString","StyleSheet","create","backgroundColor","flex","fontSize","textAlign","alignSelf","alignItems","flexDirection","justifyContent","paddingLeft","bottom","position","top","right"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Animated,\r\n  Dimensions,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  View\r\n} from \"react-native\";\r\nimport { ListItem, Icon } from \"react-native-elements\";\r\n\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\n\r\nimport db from \"../config\";\r\n\r\nexport default class SwipeableFlatlist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allNotifications: this.props.allNotifications\r\n    };\r\n  }\r\n\r\n  updateMarkAsread = notification => {\r\n    db.collection(\"all_notifications\")\r\n      .doc(notification.doc_id)\r\n      .update({\r\n        notification_status: \"read\"\r\n      });\r\n  };\r\n\r\n  onSwipeValueChange = swipeData => {\r\n    var allNotifications = this.state.allNotifications;\r\n    const { key, value } = swipeData;\r\n    if (value < -Dimensions.get(\"window\").width) {\r\n      const newData = [...allNotifications];\r\n      this.updateMarkAsread(allNotifications[key]);\r\n      newData.splice(key, 1);\r\n      this.setState({ allNotifications: newData });\r\n    }\r\n  };\r\n\r\n  renderItem = data => (\r\n    <Animated.View>\r\n      <ListItem\r\n        leftElement={<Icon name=\"book\" type=\"font-awesome\" color=\"#696969\" />}\r\n        title={data.item.book_name}\r\n        titleStyle={{ color: \"black\", fontWeight: \"bold\" }}\r\n        subtitle={data.item.message}\r\n        bottomDivider\r\n      />\r\n    </Animated.View>\r\n  );\r\n\r\n  renderHiddenItem = () => (\r\n    <View style={styles.rowBack}>\r\n      <View style={[styles.backRightBtn, styles.backRightBtnRight]}>\r\n        <Text style={styles.backTextWhite}>Mark as read</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <SwipeListView\r\n          disableRightSwipe\r\n          data={this.state.allNotifications}\r\n          renderItem={this.renderItem}\r\n          renderHiddenItem={this.renderHiddenItem}\r\n          rightOpenValue={-Dimensions.get(\"window\").width}\r\n          previewRowKey={\"0\"}\r\n          previewOpenValue={-40}\r\n          previewOpenDelay={3000}\r\n          onSwipeValueChange={this.onSwipeValueChange}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    flex: 1\r\n  },\r\n  backTextWhite: {\r\n    color: \"#FFF\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 15,\r\n    textAlign: \"center\",\r\n    alignSelf: \"flex-start\"\r\n  },\r\n  rowBack: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#29b6f6\",\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: 15\r\n  },\r\n  backRightBtn: {\r\n    alignItems: \"center\",\r\n    bottom: 0,\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    width: 100\r\n  },\r\n  backRightBtnRight: {\r\n    backgroundColor: \"#29b6f6\",\r\n    right: 0\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}