{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\balaj\\\\Desktop\\\\Coding\\\\Class 89\\\\book-santa-stage-11\\\\screens\\\\BookRequestScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport MyHeader from \"../components/MyHeader\";\nimport { BookSearch } from 'react-native-google-books';\n\nvar BookRequestScreen = function (_Component) {\n  _inherits(BookRequestScreen, _Component);\n\n  var _super = _createSuper(BookRequestScreen);\n\n  function BookRequestScreen() {\n    var _this;\n\n    _classCallCheck(this, BookRequestScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(bookName, reasonToRequest) {\n      var userId, randomRequestId, books;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _this.state.userId;\n              randomRequestId = _this.createUniqueId();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchBook(bookName, \"AIzaSyAFFnczSv2ybYNhk04w25TD72Cf8CyFk7A\"));\n\n            case 4:\n              books = _context.sent;\n              db.collection('requested_books').add({\n                \"user_id\": userId,\n                \"book_name\": bookName,\n                \"reason_to_request\": reasonToRequest,\n                \"request_id\": randomRequestId,\n                \"book_status\": \"requested\",\n                \"date\": firebase.firestore.FieldValue.serverTimestamp(),\n                \"image_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\n              });\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_this.getBookRequest());\n\n            case 8:\n              db.collection('users').where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('users').doc(doc.id).update({\n                    IsBookRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                bookName: '',\n                reasonToRequest: '',\n                requestId: randomRequestId\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Book Requested Successfully\"));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.receivedBooks = function (bookName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.requestId;\n      db.collection('received_books').add({\n        \"user_id\": userId,\n        \"book_name\": bookName,\n        \"request_id\": requestId,\n        \"bookStatus\": \"received\"\n      });\n    };\n\n    _this.getBookRequest = function () {\n      var bookRequest = db.collection('requested_books').where('user_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().book_status !== \"received\") {\n            _this.setState({\n              requestId: doc.data().request_id,\n              requestedBookName: doc.data().book_name,\n              bookStatus: doc.data().book_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('request_id', '==', _this.state.requestId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().book_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the book \" + bookName,\n                \"notification_status\": \"unread\",\n                \"book_name\": bookName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateBookRequestStatus = function () {\n      db.collection('requested_books').doc(_this.state.docId).update({\n        book_status: 'recieved'\n      });\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsBookRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.getBooksFromApi = function _callee2(bookName) {\n      var books;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                bookName: bookName\n              });\n\n              if (!(bookName.length > 2)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchBook(bookName, \"AIzaSyAFFnczSv2ybYNhk04w25TD72Cf8CyFk7A\"));\n\n            case 4:\n              books = _context2.sent;\n\n              _this.setState({\n                showFlatlist: true,\n                dataSource: books.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(TouchableHighlight, {\n        style: {\n          alignItems: 'center',\n          backgroundColor: '#DDDDDD',\n          padding: 10,\n          width: '90%'\n        },\n        activeOpacity: 0.6,\n        underlayColor: \"#DDDDDD\",\n        onPress: function onPress() {\n          _this.setState({\n            showFlatlist: false,\n            bookName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, item.volumeInfo.title));\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      bookName: \"\",\n      reasonToRequest: \"\",\n      IsBookRequestActive: \"\",\n      requestedBookName: \"\",\n      bookStatus: \"\",\n      requestId: \"\",\n      userDocId: '',\n      docId: '',\n      showFlatlist: false,\n      dataSource: \"\",\n      imageLink: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(BookRequestScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsBookRequestActive\",\n    value: function getIsBookRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('email_id', '==', this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsBookRequestActive: doc.data().IsBookRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBookRequest();\n      this.getIsBookRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsBookRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }\n        }, \"Book Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }, this.state.requestedBookName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }\n        }, \" Book Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }\n        }, this.state.bookStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateBookRequestStatus();\n\n            _this3.receivedBooks(_this3.state.requestedBookName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 11\n          }\n        }, \"I recieved the book \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Request Book\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: styles.keyBoardStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"enter book name\",\n          onChangeText: function onChangeText(text) {\n            _this3.getBooksFromApi(text);\n          },\n          value: this.state.bookName,\n          onClear: function onClear(text) {\n            _this3.getBooksFromApi(\"\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }\n        }), this.state.showFlatlist ? React.createElement(FlatList, {\n          data: this.state.dataSource,\n          renderItem: this.renderItem,\n          keyExtractor: function keyExtractor(item, index) {\n            index.toString();\n          },\n          style: {\n            marginTop: 10\n          },\n          enableEmptySections: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }\n        }) : React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: [styles.formTextInput, {\n            height: 300\n          }],\n          multiline: true,\n          numberOfLines: 8,\n          placeholder: \"Why do you need the book\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              reasonToRequest: text\n            });\n          },\n          value: this.state.reasonToRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.addRequest(_this3.state.bookName, _this3.state.reasonToRequest);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }\n        }, \"Request\")))));\n      }\n    }\n  }]);\n\n  return BookRequestScreen;\n}(Component);\n\nexport { BookRequestScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/balaj/Desktop/Coding/Class 89/book-santa-stage-11/screens/BookRequestScreen.js"],"names":["React","Component","db","firebase","MyHeader","BookSearch","BookRequestScreen","addRequest","bookName","reasonToRequest","userId","state","randomRequestId","createUniqueId","searchBook","books","collection","add","firestore","FieldValue","serverTimestamp","data","volumeInfo","imageLinks","smallThumbnail","getBookRequest","where","get","then","snapshot","forEach","doc","id","update","IsBookRequestActive","setState","requestId","Alert","alert","receivedBooks","bookRequest","book_status","request_id","requestedBookName","book_name","bookStatus","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","updateBookRequestStatus","getBooksFromApi","length","showFlatlist","dataSource","renderItem","item","index","alignItems","backgroundColor","padding","width","title","auth","currentUser","email","userDocId","imageLink","Math","random","toString","substring","onSnapshot","querySnapshot","getIsBookRequestActive","flex","justifyContent","borderColor","borderWidth","margin","alignSelf","height","marginTop","props","navigation","styles","keyBoardStyle","formTextInput","text","button","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  FlatList,\r\n  TouchableHighlight} from 'react-native';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\nimport MyHeader from '../components/MyHeader'\r\nimport {BookSearch} from 'react-native-google-books';\r\n\r\nexport default class BookRequestScreen extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      userId : firebase.auth().currentUser.email,\r\n      bookName:\"\",\r\n      reasonToRequest:\"\",\r\n      IsBookRequestActive : \"\",\r\n      requestedBookName: \"\",\r\n      bookStatus:\"\",\r\n      requestId:\"\",\r\n      userDocId: '',\r\n      docId :'',\r\n      showFlatlist: false,\r\n      dataSource: \"\",\r\n      imageLink: \"\"\r\n    }\r\n  }\r\n\r\n  createUniqueId(){\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n\r\n\r\n  addRequest = async (bookName,reasonToRequest)=>{\r\n    var userId = this.state.userId\r\n    var randomRequestId = this.createUniqueId()\r\n    var books = await BookSearch.searchBook(bookName, \"AIzaSyAFFnczSv2ybYNhk04w25TD72Cf8CyFk7A\");\r\n    db.collection('requested_books').add({\r\n        \"user_id\": userId,\r\n        \"book_name\":bookName,\r\n        \"reason_to_request\":reasonToRequest,\r\n        \"request_id\"  : randomRequestId,\r\n        \"book_status\" : \"requested\",\r\n        \"date\"       : firebase.firestore.FieldValue.serverTimestamp(),\r\n        \"image_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\r\n\r\n    })\r\n\r\n    await  this.getBookRequest()\r\n    db.collection('users').where(\"email_id\",\"==\",userId).get()\r\n    .then()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc)=>{\r\n        db.collection('users').doc(doc.id).update({\r\n      IsBookRequestActive: true\r\n      })\r\n    })\r\n  })\r\n\r\n    this.setState({\r\n        bookName :'',\r\n        reasonToRequest : '',\r\n        requestId: randomRequestId\r\n    })\r\n\r\n    return Alert.alert(\"Book Requested Successfully\")\r\n\r\n\r\n  }\r\n\r\nreceivedBooks=(bookName)=>{\r\n  var userId = this.state.userId\r\n  var requestId = this.state.requestId\r\n  db.collection('received_books').add({\r\n      \"user_id\": userId,\r\n      \"book_name\":bookName,\r\n      \"request_id\"  : requestId,\r\n      \"bookStatus\"  : \"received\",\r\n\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\ngetIsBookRequestActive(){\r\n  db.collection('users')\r\n  .where('email_id','==',this.state.userId)\r\n  .onSnapshot(querySnapshot => {\r\n    querySnapshot.forEach(doc => {\r\n      this.setState({\r\n        IsBookRequestActive:doc.data().IsBookRequestActive,\r\n        userDocId : doc.id\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ngetBookRequest =()=>{\r\n  // getting the requested book\r\nvar bookRequest=  db.collection('requested_books')\r\n  .where('user_id','==',this.state.userId)\r\n  .get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc)=>{\r\n      if(doc.data().book_status !== \"received\"){\r\n        this.setState({\r\n          requestId : doc.data().request_id,\r\n          requestedBookName: doc.data().book_name,\r\n          bookStatus:doc.data().book_status,\r\n          docId     : doc.id\r\n        })\r\n      }\r\n    })\r\n})}\r\n\r\n\r\n\r\nsendNotification=()=>{\r\n  //to get the first name and last name\r\n  db.collection('users').where('email_id','==',this.state.userId).get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc)=>{\r\n      var name = doc.data().first_name\r\n      var lastName = doc.data().last_name\r\n\r\n      // to get the donor id and book nam\r\n      db.collection('all_notifications').where('request_id','==',this.state.requestId).get()\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((doc) => {\r\n          var donorId  = doc.data().donor_id\r\n          var bookName =  doc.data().book_name\r\n\r\n          //targert user id is the donor id to send notification to the user\r\n          db.collection('all_notifications').add({\r\n            \"targeted_user_id\" : donorId,\r\n            \"message\" : name +\" \" + lastName + \" received the book \" + bookName ,\r\n            \"notification_status\" : \"unread\",\r\n            \"book_name\" : bookName\r\n          })\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.getBookRequest()\r\n  this.getIsBookRequestActive()\r\n\r\n}\r\n\r\nupdateBookRequestStatus=()=>{\r\n  //updating the book status after receiving the book\r\n  db.collection('requested_books').doc(this.state.docId)\r\n  .update({\r\n    book_status : 'recieved'\r\n  })\r\n\r\n  //getting the  doc id to update the users doc\r\n  db.collection('users').where('email_id','==',this.state.userId).get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc) => {\r\n      //updating the doc\r\n      db.collection('users').doc(doc.id).update({\r\n        IsBookRequestActive: false\r\n      })\r\n    })\r\n  })\r\n\r\n\r\n}\r\n getBooksFromApi = async(bookName) => {\r\n   this.setState({\r\n     bookName: bookName\r\n   })\r\n   if(bookName.length > 2) {\r\n     var books = await BookSearch.searchBook(bookName, \"AIzaSyAFFnczSv2ybYNhk04w25TD72Cf8CyFk7A\");\r\n     this.setState({\r\n       showFlatlist: true,\r\n       dataSource: books.data\r\n     });\r\n   }\r\n }\r\n\r\n renderItem = ({item, index}) => {\r\n  return(\r\n    <TouchableHighlight\r\n    style = {{\r\n      alignItems: 'center',\r\n      backgroundColor: '#DDDDDD',\r\n      padding: 10,\r\n      width: '90%'\r\n    }}\r\n    activeOpacity = {0.6}\r\n    underlayColor = \"#DDDDDD\"\r\n    onPress = {() => {\r\n      this.setState({\r\n        showFlatlist: false,\r\n        bookName: item.volumeInfo.title\r\n      })\r\n    }}\r\n    bottomDivider>\r\n      <Text>{item.volumeInfo.title}</Text>\r\n    </TouchableHighlight>\r\n  );\r\n }\r\n\r\n  render(){\r\n\r\n    if(this.state.IsBookRequestActive === true){\r\n      return(\r\n\r\n        // Status screen\r\n\r\n        <View style = {{flex:1,justifyContent:'center'}}>\r\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n          <Text>Book Name</Text>\r\n          <Text>{this.state.requestedBookName}</Text>\r\n          </View>\r\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n          <Text> Book Status </Text>\r\n\r\n          <Text>{this.state.bookStatus}</Text>\r\n          </View>\r\n\r\n          <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\r\n          onPress={()=>{\r\n            this.sendNotification()\r\n            this.updateBookRequestStatus();\r\n            this.receivedBooks(this.state.requestedBookName)\r\n          }}>\r\n          <Text>I recieved the book </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )\r\n    }\r\n    else\r\n    {\r\n    return(\r\n      // Form screen\r\n        <View style={{flex:1}}>\r\n          <MyHeader title=\"Request Book\" navigation ={this.props.navigation}/>\r\n            <View style={styles.keyBoardStyle}>\r\n              <TextInput\r\n                style ={styles.formTextInput}\r\n                placeholder={\"enter book name\"}\r\n                onChangeText={(text)=>{\r\n                    this.getBooksFromApi(text);\r\n                }}\r\n                value={this.state.bookName}\r\n                onClear = {(text) => {\r\n                  this.getBooksFromApi(\"\");\r\n                }}\r\n              />\r\n              {this.state.showFlatlist ? (\r\n                <FlatList \r\n                data = {this.state.dataSource}\r\n                renderItem = {this.renderItem}\r\n                keyExtractor = {(item, index) => {\r\n                  index.toString();\r\n                }}\r\n                style = {{marginTop: 10}}\r\n                enableEmptySections = {true}/>\r\n              ) : (\r\n                <View>\r\n                <TextInput\r\n                style ={[styles.formTextInput,{height:300}]}\r\n                multiline\r\n                numberOfLines ={8}\r\n                placeholder={\"Why do you need the book\"}\r\n                onChangeText ={(text)=>{\r\n                    this.setState({\r\n                        reasonToRequest:text\r\n                    })\r\n                }}\r\n                value ={this.state.reasonToRequest}\r\n              />\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={()=>{ this.addRequest(this.state.bookName,this.state.reasonToRequest);\r\n                }}\r\n                >\r\n                <Text>Request</Text>\r\n              </TouchableOpacity>\r\n              </View>\r\n              )}\r\n\r\n            </View>\r\n            </View>\r\n       \r\n    )\r\n  }\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  keyBoardStyle : {\r\n    flex:1,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  formTextInput:{\r\n    width:\"75%\",\r\n    height:35,\r\n    alignSelf:'center',\r\n    borderColor:'#ffab91',\r\n    borderRadius:10,\r\n    borderWidth:1,\r\n    marginTop:20,\r\n    padding:10,\r\n  },\r\n  button:{\r\n    width:\"75%\",\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderRadius:10,\r\n    backgroundColor:\"#ff5722\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop:20\r\n    },\r\n  }\r\n)\r\n"]},"metadata":{},"sourceType":"module"}