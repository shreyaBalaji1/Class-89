{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\balaj\\\\Desktop\\\\Coding\\\\Class 89\\\\book-santa-stage-11\\\\screens\\\\RecieverDetailsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Header, Icon } from 'react-native-elements';\nimport firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar RecieverDetailsScreen = function (_Component) {\n  _inherits(RecieverDetailsScreen, _Component);\n\n  var _super = _createSuper(RecieverDetailsScreen);\n\n  function RecieverDetailsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecieverDetailsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getUserDetails = function (userId) {\n      db.collection(\"users\").where('email_id', '==', userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            userName: doc.data().first_name + \" \" + doc.data().last_name\n          });\n        });\n      });\n    };\n\n    _this.updateBookStatus = function () {\n      db.collection('all_donations').add({\n        \"book_name\": _this.state.bookName,\n        \"request_id\": _this.state.requestId,\n        \"requested_by\": _this.state.recieverName,\n        \"donor_id\": _this.state.userId,\n        \"request_status\": \"Donor Interested\"\n      });\n    };\n\n    _this.addNotification = function () {\n      var message = _this.state.userName + \" has shown interest in donating the book\";\n      db.collection(\"all_notifications\").add({\n        \"targeted_user_id\": _this.state.recieverId,\n        \"donor_id\": _this.state.userId,\n        \"request_id\": _this.state.requestId,\n        \"book_name\": _this.state.bookName,\n        \"date\": firebase.firestore.FieldValue.serverTimestamp(),\n        \"notification_status\": \"unread\",\n        \"message\": message\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      userName: \"\",\n      recieverId: _this.props.navigation.getParam('details')[\"user_id\"],\n      requestId: _this.props.navigation.getParam('details')[\"request_id\"],\n      bookName: _this.props.navigation.getParam('details')[\"book_name\"],\n      reason_for_requesting: _this.props.navigation.getParam('details')[\"reason_to_request\"],\n      recieverName: '',\n      recieverContact: '',\n      recieverAddress: '',\n      recieverRequestDocId: ''\n    };\n    return _this;\n  }\n\n  _createClass(RecieverDetailsScreen, [{\n    key: \"getRecieverDetails\",\n    value: function getRecieverDetails() {\n      var _this2 = this;\n\n      db.collection('users').where('email_id', '==', this.state.recieverId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this2.setState({\n            recieverName: doc.data().first_name,\n            recieverContact: doc.data().contact,\n            recieverAddress: doc.data().address\n          });\n        });\n      });\n      db.collection('requested_books').where('request_id', '==', this.state.requestId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this2.setState({\n            recieverRequestDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRecieverDetails();\n      this.getUserDetails(this.state.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, React.createElement(Header, {\n        leftComponent: React.createElement(Icon, {\n          name: \"arrow-left\",\n          type: \"feather\",\n          color: \"#696969\",\n          onPress: function onPress() {\n            return _this3.props.navigation.goBack();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 31\n          }\n        }),\n        centerComponent: {\n          text: \"Donate Books\",\n          style: {\n            color: '#90A5A9',\n            fontSize: 20,\n            fontWeight: \"bold\"\n          }\n        },\n        backgroundColor: \"#eaf8fe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        title: \"Book Information\",\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, \"Name : \", this.state.bookName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Reason : \", this.state.reason_for_requesting)))), React.createElement(View, {\n        style: {\n          flex: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        title: \"Reciever Information\",\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Name: \", this.state.recieverName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \"Contact: \", this.state.recieverContact)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, \"Address: \", this.state.recieverAddress)))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, this.state.recieverId !== this.state.userId ? React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this3.updateBookStatus();\n\n          _this3.addNotification();\n\n          _this3.props.navigation.navigate('MyDonations');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, \"I want to Donate\")) : null));\n    }\n  }]);\n\n  return RecieverDetailsScreen;\n}(Component);\n\nexport { RecieverDetailsScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 0.3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    width: 200,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: 'orange',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/balaj/Desktop/Coding/Class 89/book-santa-stage-11/screens/RecieverDetailsScreen.js"],"names":["React","Component","Card","Header","Icon","firebase","db","RecieverDetailsScreen","props","getUserDetails","userId","collection","where","get","then","snapshot","forEach","doc","setState","userName","data","first_name","last_name","updateBookStatus","add","state","bookName","requestId","recieverName","addNotification","message","recieverId","firestore","FieldValue","serverTimestamp","auth","currentUser","email","navigation","getParam","reason_for_requesting","recieverContact","recieverAddress","recieverRequestDocId","contact","address","id","getRecieverDetails","styles","container","flex","goBack","text","style","color","fontSize","fontWeight","buttonContainer","button","navigate","StyleSheet","create","justifyContent","alignItems","width","height","borderRadius","backgroundColor","shadowColor","shadowOffset","elevation"],"mappings":"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","sourcesContent":["\r\nimport React ,{Component} from 'react';\r\nimport {View,Text,StyleSheet,TouchableOpacity} from 'react-native';\r\nimport{Card,Header,Icon} from 'react-native-elements';\r\nimport firebase from 'firebase';\r\n\r\nimport db from '../config.js';\r\n\r\nexport default class RecieverDetailsScreen extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      userId                    : firebase.auth().currentUser.email,\r\n      userName                  : \"\",\r\n      recieverId                : this.props.navigation.getParam('details')[\"user_id\"],\r\n      requestId                 : this.props.navigation.getParam('details')[\"request_id\"],\r\n      bookName                  : this.props.navigation.getParam('details')[\"book_name\"],\r\n      reason_for_requesting     : this.props.navigation.getParam('details')[\"reason_to_request\"],\r\n      recieverName              : '',\r\n      recieverContact           : '',\r\n      recieverAddress           : '',\r\n      recieverRequestDocId      : ''\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getRecieverDetails(){\r\n    db.collection('users').where('email_id','==',this.state.recieverId).get()\r\n    .then(snapshot=>{\r\n      snapshot.forEach(doc=>{\r\n        this.setState({\r\n          recieverName    : doc.data().first_name,\r\n          recieverContact : doc.data().contact,\r\n          recieverAddress : doc.data().address,\r\n        })\r\n      })\r\n    });\r\n\r\n    db.collection('requested_books').where('request_id','==',this.state.requestId).get()\r\n    .then(snapshot=>{\r\n      snapshot.forEach(doc => {\r\n        this.setState({recieverRequestDocId:doc.id})\r\n     })\r\n  })}\r\n\r\n\r\n  getUserDetails=(userId)=>{\r\n    db.collection(\"users\").where('email_id','==', userId).get()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc) => {\r\n        this.setState({\r\n          userName  :doc.data().first_name + \" \" + doc.data().last_name\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  updateBookStatus=()=>{\r\n    db.collection('all_donations').add({\r\n      \"book_name\"           : this.state.bookName,\r\n      \"request_id\"          : this.state.requestId,\r\n      \"requested_by\"        : this.state.recieverName,\r\n      \"donor_id\"            : this.state.userId,\r\n      \"request_status\"      :  \"Donor Interested\"\r\n    })\r\n  }\r\n\r\n\r\n  addNotification=()=>{\r\n    var message = this.state.userName + \" has shown interest in donating the book\"\r\n    db.collection(\"all_notifications\").add({\r\n      \"targeted_user_id\"    : this.state.recieverId,\r\n      \"donor_id\"            : this.state.userId,\r\n      \"request_id\"          : this.state.requestId,\r\n      \"book_name\"           : this.state.bookName,\r\n      \"date\"                : firebase.firestore.FieldValue.serverTimestamp(),\r\n      \"notification_status\" : \"unread\",\r\n      \"message\"             : message\r\n    })\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    this.getRecieverDetails()\r\n    this.getUserDetails(this.state.userId)\r\n  }\r\n\r\n\r\n    render(){\r\n      return(\r\n        <View style={styles.container}>\r\n          <View style={{flex:0.1}}>\r\n            <Header\r\n              leftComponent ={<Icon name='arrow-left' type='feather' color='#696969'  onPress={() => this.props.navigation.goBack()}/>}\r\n              centerComponent={{ text:\"Donate Books\", style: { color: '#90A5A9', fontSize:20,fontWeight:\"bold\", } }}\r\n              backgroundColor = \"#eaf8fe\"\r\n            />\r\n          </View>\r\n          <View style={{flex:0.3}}>\r\n            <Card\r\n                title={\"Book Information\"}\r\n                titleStyle= {{fontSize : 20}}\r\n              >\r\n              <Card >\r\n                <Text style={{fontWeight:'bold'}}>Name : {this.state.bookName}</Text>\r\n              </Card>\r\n              <Card>\r\n                <Text style={{fontWeight:'bold'}}>Reason : {this.state.reason_for_requesting}</Text>\r\n              </Card>\r\n            </Card>\r\n          </View>\r\n          <View style={{flex:0.3}}>\r\n            <Card\r\n              title={\"Reciever Information\"}\r\n              titleStyle= {{fontSize : 20}}\r\n              >\r\n              <Card>\r\n                <Text style={{fontWeight:'bold'}}>Name: {this.state.recieverName}</Text>\r\n              </Card>\r\n              <Card>\r\n                <Text style={{fontWeight:'bold'}}>Contact: {this.state.recieverContact}</Text>\r\n              </Card>\r\n              <Card>\r\n                <Text style={{fontWeight:'bold'}}>Address: {this.state.recieverAddress}</Text>\r\n              </Card>\r\n            </Card>\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            {\r\n              this.state.recieverId !== this.state.userId\r\n              ?(\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={()=>{\r\n                      this.updateBookStatus()\r\n                      this.addNotification()\r\n                      this.props.navigation.navigate('MyDonations')\r\n                    }}>\r\n                  <Text>I want to Donate</Text>\r\n                </TouchableOpacity>\r\n              )\r\n              : null\r\n            }\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n  },\r\n  buttonContainer : {\r\n    flex:0.3,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  button:{\r\n    width:200,\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems : 'center',\r\n    borderRadius: 10,\r\n    backgroundColor: 'orange',\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8\r\n     },\r\n    elevation : 16\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}